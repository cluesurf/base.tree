
note <Generic BigUint.>

# http://supertech.csail.mit.edu/papers/debruijn.pdf
# https://github.com/brix/crypto-js/tree/develop/src
# https://github.com/brix/crypto-js/blob/develop/src/md5.js

form mark
  take list, list mark-32
    hide true

task round-down-to-power-of-two-8
  take x
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  call subtract
    read x
    call shift-right
      read x
      mark 1

task round-down-to-power-of-two-16
  take x
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  save x
    call mix-for-power-rounding
      read x
      mark 8
  call subtract
    read x
    call shift-right
      read x
      mark 1

task round-down-to-power-of-two-32
  take x
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  save x
    call mix-for-power-rounding
      read x
      mark 8
  save x
    call mix-for-power-rounding
      read x
      mark 16
  call subtract
    read x
    call shift-right
      read x
      mark 1

task round-up-to-power-of-two-8
  take x
  save x
    call subtract
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  call add
    read x
    mark 1

task round-up-to-power-of-two-16
  take x
  save x
    call subtract
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  save x
    call mix-for-power-rounding
      read x
      mark 8
  call add
    read x
    mark 1

task round-up-to-power-of-two-32
  take x
  save x
    call subtract
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 1
  save x
    call mix-for-power-rounding
      read x
      mark 2
  save x
    call mix-for-power-rounding
      read x
      mark 4
  save x
    call mix-for-power-rounding
      read x
      mark 8
  save x
    call mix-for-power-rounding
      read x
      mark 16
  call add
    read x
    mark 1

task mix-for-power-rounding
  take a
  take b
  hide true
  call bitwise-or
    read a
    call shift-right
      read a
      read b

task gcd
  take a
  take b
  call test
    call is-greater-than
      read b
      read a
    hook true
      save b
        call subtract
          call add
            read a
            save a, read b
          read b
  walk test
    hook test
      call test
        true
    hook true
      call test
        call is-equal
          call remainder
            read a
            read b
          mark 0
        hook true
          back seed
            call math/abs
              bind read b
      save b
        call remainder
          read a
          save a, read b

task lcm
  take a
  take b
  back seed
    call math/abs
      call multiply
        call divide
          read a
          call gcd
            bind read a
            bind read b
        read b

tree is-even
  take size, like mark-8

  task is-even
    take n, like mark-{size}
    call is-equal
      call intersect-bitwise
        read n
        mark 1
      mark 0

tree is-odd
  take size, like mark-8

  task is-odd
    take n, like mark-{size}
    call is-not-equal
      call intersect-bitwise
        read n
        mark 1
      mark 0

tree is-power-of-two
  take size, like mark-8

  hook bind
    task is-power-of-two
      take n, like mark-{size}
      call and
        call is-not-equal
          read n
          mark 0
        call is-equal
          call intersect-bitwise
            read n
            call subtract
              read n
              mark 1
          mark 0

tree rotate
  take size, like mark-8

  hook bind
    task rotate-base
      take a, like mark-{size}
      take b, like mark-{size}

      call unify-bitwise
        call shift-base
          read a
          read b
        call shift-head
          read a
          call subtract
            read size
            read b

    task rotate-head
      take a, like mark-{size}
      take b, like mark-{size}

      call unify-bitwise
        call shift-head
          read a
          read b
        call shift-base
          read a
          call subtract
            read size
            read b

host binary-reversal-table, call make-reversal-table

task make-reversal-table
  save table, make list-mark-8, mark 256
  save i, mark 0
  walk test
    hook test
      call is-below
        read i
        mark 256
    hook true
      save v
        call unsigned-shift-head
          read i
          mark 1
      save r, read i
      save s, mark 7
      walk test
        hook test
          call is-not-zero
            read v
        hook true
          save r
            call shift-base
              read r
              mark 1
          save r
            call unify-bitwise
              read r
              call intersect-bitwise
                read v
                mark 1
          save s
            call subtract
              read s
              mark 1
          save v
            call unsigned-shift-head
              read v
              mark 1
      call table/set
        read i
        call intersect-bitwise
          call shift-base
            read r
            read s
          mark 255
      save i, call add, read i
  back seed, read table

save binary-trailing-zero-magic-number, mark #x077cb531
save binary-leading-zero-table, call make-leading-zero-table
save binary-trailing-zero-table
  call make-de-bruijn-trailing-zero-table
    mark 5
    loan binary-trailing-zero-magic-number

task count-trailing-zeroes-32
  take n
  call binary-trailing-zero-table/get
    call unsigned-shift-right
      call multiply
        call bitwise-and
          loan n
          call negate
            loan n
        loan binary-trailing-zero-magic-number
      mark 27

task count-trailing-zeroes-16
  take n
  call count-trailing-zeroes-32
    loan n

task count-trailing-zeroes-8
  take n
  call count-trailing-zeroes-32
    loan n

task count-trailing-ones-32
  take x
  call count-trailing-zeroes-32
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task count-trailing-ones-16
  take x
  call count-trailing-zeroes-32
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task count-trailing-ones-8
  take x
  call count-trailing-zeroes-32
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task count-leading-zeroes-32
  take n

  save r
    call binary-leading-zero-table/get
      call unsigned-shift-right
        loan n
        mark 24

  stem test
    call is-equal
      loan r
      mark 8
    hook true
      save r
        call add
          loan r
          call binary-leading-zero-table/get
            call unsigned-shift-right
              loan n
              mark 16

  stem test
    call is-equal
      loan r
      mark 16
    hook true
      save r
        call add
          loan r
          call binary-leading-zero-table/get
            call unsigned-shift-right
              loan n
              mark 8

  stem test
    call is-equal
      loan r
      mark 24
    hook true
      save r
        call add
          loan r
          call binary-leading-zero-table/get
            loan n

  back seed, loan r

task count-leading-zeroes-16
  take n
  save r
    call binary-leading-zero-table/get
      call unsigned-shift-right
        loan n
        mark 8

  stem test
    call is-equal
      loan r
      mark 8
    hook true
      save r
        call add
          bind r
          call binary-leading-zero-table/get
            loan n

  back seed, loan r

task count-leading-zeroes-8
  take n
  call binary-leading-zero-table/get
    loan n

task count-leading-ones-32
  take n
  call count-leading-zeroes-32
    call bitwise-and
      call unsigned-shift-right
        call negate-bitwise
          loan n
        mark 0
      mark #xffffffff

task count-leading-ones-16
  take n

  call count-leading-zeroes-16
    call bitwise-and
      call unsigned-shift-right
        call negate-bitwise
          loan n
        mark 0
      mark #xffff

task count-leading-ones-8
  take n

  call count-leading-zeroes-8
    call bitwise-and
      call unsigned-shift-right
        call negate-bitwise
          loan n
        mark 0
      mark #xff

task make-leading-zero-table
  save i, mark 0
  save table, make uint8-array, mark 256
  walk test
    hook test
      call is-below
        loan i
        mark 256
    hook true
      save count, mark 8
      save index, loan i
      walk test
        hook test
          call is-above
            loan index
            mark 0
        hook true
          save index
            call bitwise-or
              call divide
                loan index
                mark 2
              mark 0
          save count, call decrement, loan count
      call table/set
        loan i
        loan count
      save i, call increment, loan i
  back seed, loan table

task make-de-bruijn-trailing-zero-table
  take exponent
  take de-bruijn-constant
  save n
    call math/pow
      bind mark 2
      bind loan exponent
  save table, make array, loan n
  save i, mark 0
  walk test
    hook test
      call is-below
        loan i
        loan n
    hook true
      call table/set
        call unsigned-shift-right
          call shift-left
            loan de-bruijn-constant
            loan i
          call subtract
            loan n
            loan exponent
        loan i
      save i, call increment, loan i

  back seed, loan table

host binary-count-one-table, call make-binary-count-one-table

task make-binary-count-one-table
  save table, make uint8-array, mark 256
  save i, mark 0
  walk test
    hook test
      call is-below
        loan i
        mark 256
    hook true
      call table/set
        loan i
        call add
          call bitwise-and
            loan i
            mark 1
          call table/get
            call bitwise-or
              call divide
                loan i
                mark 2
              mark 0
      save i, call increment, loan i
  back seed, loan table

task count-one-bits-32
  take x

  call add
    call add
      call add
        call binary-count-one-table/get
          call bitwise-and
            loan x
            mark #xff
        call binary-count-one-table/get
          call bitwise-and
            call shift-right
              loan x
              mark 8
            mark #xff
      call binary-count-one-table/get
        call bitwise-and
          call shift-right
            loan x
            mark 16
          mark #xff
    call binary-count-one-table/get
      call bitwise-and
        call shift-right
          loan x
          mark 24
        mark #xff

task count-one-bits-16
  take x
  call add
    call binary-count-one-table/get
      call bitwise-and
        loan x
        mark #xff
    call binary-count-one-table/get
      call bitwise-and
        call shift-right
          loan x
          mark 8
        mark #xff

task count-one-bits8
  take x
  call binary-count-one-table/get
    call bitwise-and
      loan x
      mark #xff

task count-zero-bits-32
  take x
  call count-one-bits-32
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task count-zero-bits-16
  take x
  call count-one-bits-16
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task count-zero-bits-8
  take x
  call count-one-bits-8
    call unsigned-shift-right
      call negate-bitwise
        loan x
      mark 0

task reverse-bits-8
  take n
  call bit-reversal-table/get
    loan n

task reverse-bits-16
  take n
  call bitwise-or
    call bit-reversal-table/get
      call bitwise-and
        call shift-right
          loan n
          mark 8
        mark #xff
    call shift-left
      call bit-reversal-table/get
        call bitwise-and
          loan n
          mark #xff
      mark 8

task reverse-bits-32
  take n
  call add
    call add
      call add
        call multiply
          call bit-reversal-table/get
            call bitwise-and
              loan n
              mark #xff
          call math/pow
            bind mark 2
            bind mark 24
        call multiply
          call bit-reversal-table/get
            call bitwise-and
              call unsigned-shift-right
                loan n
                mark 8
              mark #xff
          call math/pow
            bind mark 2
            bind mark 16
      call multiply
        call bit-reversal-table/get
          call bitwise-and
            call unsigned-shift-right
              loan n
              mark 16
            mark #xff
        call math/pow
          bind mark 2
          bind mark 8
    call bit-reversal-table/get
      call bitwise-and
        call unsigned-shift-right
          loan n
          mark 24
        mark #xff

task has-flag
  take flags
  take flag

  test is-equal
    call bitwise-intersect
      read flags
      read flag
    read flag

task add-flag
  take flags
  take flag

  call bitwise-unite
    read flags
    read flag

task remove-flag
  take flags
  take flag

  call bitwise-intersect
    read flags
    call bitwise-negate
      read flag

task toggle-flag
  take flags
  take flag

  call bitwise-exclusive-unite
    read flags
    read flag

task walk-bits
  take self
  save i, mark 0
  save n, loan self/bit-capacity
  walk test
    hook test
      call is-below
        loan i
        loan n
    hook true
      save v
        call is-bit-set
          loan self
          loan i
      kick step
        loan v
        loan i
      save i, call add, loan i

task is-bit-set
  take mark
  take position
  call is-not-equal
    call bitwise-and
      loan mark
      call shift-left
        mark 1
        loan position
    mark 0
